openapi: 3.0.0
servers:
  - url: http://localhost:3000
    description: Localhost Environment

info:
  version: '1.0.0'
  title: Restaurant API
  description: >-
    Restaurant API documentation
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: token
  responses:
    200_ok:
      description: OK
      content:
        application/json:
          schema:
            type: boolean
    400_Bad_Request:
      description: Error processing request
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: object
                properties:
                  name:
                    type: string
                    example: 'ValidationError'
                  message:
                    type: string
                    example: '"email" is required'
    401_Authorization_Denied:
      description: Authorization information is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Token expired'
paths:
  /users/signIn:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: 'admin'
                password:
                  type: string
                  example: 'password'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    example: 5f8db309216bebdc870c8d0b
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjVmOGRiMzA5MjE2YmViZGM4NzBjOGQwYiIsInBlcm1pc3Npb25zIjpbImZpbmFuY2Vyc19yZWFkIiwiZmluYW5jZXJzX2NyZWF0ZSIsImZpbmFuY2Vyc191cGRhdGUiLCJmaW5hbmNlcnNfZGVsZXRlIiwicHJvZmVzc2lvbnNfcmVhZCIsInByb2Zlc3Npb25zX2NyZWF0ZSIsInByb2Zlc3Npb25zX3VwZGF0ZSIsInByb2Zlc3Npb25zX2RlbGV0ZSIsInByb2Zlc3Npb25hbHNfcmVhZCIsInByb2Zlc3Npb25hbHNfY3JlYXRlIiwicHJvZmVzc2lvbmFsc191cGRhdGUiLCJwcm9mZXNzaW9uYWxzX2RlbGV0ZSJdfSwiaWF0IjoxNjAzMzkwNDk1LCJleHAiOjE2MDMzOTEwOTV9.h4IYU0T35a7GmFB4Higpmf4Nowjie0jnszX-KO6aCsQ
                  expires_in:
                    type: integer
                    example: 3600
  /menus:
    get:
      summary: Get all menus
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: start
          schema:
            type: number
        - in: query
          name: limit
          schema:
            type: number
        - in: query
          name: columnOrder
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
          description: 'DESC || ASC'
        - in: query
          name: idCategories
          schema:
            type: array
            items:
              type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    post:
      summary: Create all menus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - short_name
                - price
              properties:
                name:
                  type: string
                short_name:
                  type: string
                bar_code:
                  type: string
                idCategory:
                  type: number
                maximum_of_flavors:
                  type: number
                approximate_delay_minutes:
                  type: number
                state:
                  type: boolean
                  default: true
                isGarnish:
                  type: boolean
                  default: false
                ingrdients:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - quantity
                    properties:
                      id:
                        type: number
                      quantity:
                        type: number
                granishes:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - max_quantity
                    properties:
                      id:
                        type: number
                      max_quantity:
                        type: number
                        default: 1
                price:
                  type: number
                idCharacteristics:
                  type: array
                  items:
                    type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
  /menus/{id}:
    get:
      summary: Get one menu
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    put:
      summary: Update one menu
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                short_name:
                  type: string
                bar_code:
                  type: string
                idCategory:
                  type: number
                maximum_of_flavors:
                  type: number
                approximate_delay_minutes:
                  type: number
                state:
                  type: boolean
                  default: true
                isGarnish:
                  type: boolean
                  default: false
                idIngredients:
                  type: array
                  items:
                    type: number
                price:
                  type: number
                idCharacteristics:
                  type: array
                  items:
                    type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    delete:
      summary: Delete one menu
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'

  /categories:
    get:
      summary: Get all categories
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    post:
      summary: Create all categories
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
  /categories/{id}:
    get:
      summary: Get one category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    put:
      summary: Update one category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    delete:
      summary: Delete one category
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'

  /ingredients:
    get:
      summary: Get all ingredients
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: start
          schema:
            type: number
        - in: query
          name: limit
          schema:
            type: number
        - in: query
          name: columnOrder
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
          description: 'DESC || ASC'
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    post:
      summary: Create all ingredients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                unit_of_measure:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
  /ingredients/{id}:
    get:
      summary: Get one ingredient
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    put:
      summary: Update one ingredient
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                unit_of_measure:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    delete:
      summary: Delete one ingredient
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'

  /characteristics:
    get:
      summary: Get all characteristics
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    post:
      summary: Create all characteristics
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
  /characteristics/{id}:
    get:
      summary: Get one characteristic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    put:
      summary: Update one characteristic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
    delete:
      summary: Delete one characteristic
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/200_ok'
        '400':
          $ref: '#/components/responses/400_Bad_Request'
        '401':
          $ref: '#/components/responses/400_Bad_Request'
